{
  "permissions": {
    "allow": [
      "Bash(npm run dev:*)",
      "Bash(curl:*)",
      "Bash(grep:*)",
      "Bash(npm run typecheck:*)",
      "Bash(true)",
      "Bash(npm run:*)",
      "Bash(mv:*)",
      "Bash(mkdir:*)",
      "Bash(npm install:*)",
      "Bash(git add:*)",
      "Bash(rm:*)",
      "Bash(npx tsc:*)",
      "Bash(tree:*)",
      "Bash(find:*)",
      "Bash(cp:*)",
      "Bash(rg:*)",
      "Bash(lsof:*)",
      "Bash(npx tsx:*)",
      "Bash(tsx:*)",
      "Bash(npx drizzle-kit push:*)",
      "Bash(git checkout:*)",
      "Bash(sed:*)",
      "Bash(ls:*)",
      "Bash(npx drizzle-kit:*)",
      "Bash(node:*)",
      "Bash(pkill:*)",
      "Bash(env)",
      "Bash(cat:*)",
      "Bash(ls:*)",
      "Bash(NODE_ENV=development node -e \"console.log('NODE_ENV:', process.env.NODE_ENV); console.log('DANGEROUSLY_DISABLE_HOST_CHECK:', process.env.DANGEROUSLY_DISABLE_HOST_CHECK);\")",
      "Bash(source:*)",
      "Bash(echo:*)",
      "Bash(timeout 3 npm run dev 2 >& 1)",
      "Bash(NODE_ENV=development npx vite 2 >& 1)",
      "Bash(npm ls:*)",
      "Bash(npm outdated)",
      "Bash(npm audit:*)",
      "Bash(npm dedupe:*)",
      "Bash(NODE_ENV=production npm run build 2 >& 1)",
      "Bash(NODE_ENV=production npm run build 2>&1)",
      "Bash(NODE_ENV=production npm run build)",
      "Bash(NODE_ENV=production npm run prebuild 2>&1)",
      "Bash(NODE_ENV=production npm ci --omit=dev --omit=optional)",
      "Bash(chmod:*)",
      "Bash(git commit:*)",
      "Bash(git config:*)",
      "Bash(NODE_ENV=production npm ci --production --omit=optional)",
      "Bash(./node_modules/.bin/tsc:*)",
      "Bash(./node_modules/.bin/vite build:*)",
      "Bash(npm ci:*)",
      "Bash(NODE_ENV=production timeout 3 node index.js)",
      "Bash(sh -c \"npm ci && npm run build && npm run validate\" 2 >& 1)",
      "Bash(NODE_ENV=production timeout 5 node index.js)",
      "Bash(NODE_ENV=production timeout 10 node index.js)",
      "Bash(pm2 list:*)",
      "Bash(kill:*)",
      "Bash([ -f public/manifest.json ])",
      "Bash(./scripts/test-deployment.sh:*)",
      "Bash(# Start a simple server on port 5000 in background\nnode -e \"require('http').createServer((req,res)=>res.end('test')).listen(5000)\" &\necho \"Started test server on port 5000\"\nsleep 1)"
    ],
    "deny": []
  }
}